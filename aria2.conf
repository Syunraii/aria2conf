## '#'开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##
## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##

## 文件保存相关 ##

# 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置
dir=${HOME}/Downloads/aria2Downloads
# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M
disk-cache=16M
# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc
# 预分配所需时间: none < falloc ? trunc < prealloc
# falloc和trunc则需要文件系统和内核支持
# NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项
# file-allocation=none
# 文件预分配大小限制 小于此选项值大小的文件不预分配空间，单位 K 或 M，默认：5M
no-file-allocation-limit=5M

## 进度保存相关 ##

# 启用后台进程
daemon=false
# 日志文件输出与存储
log-level=error
# 日志文件保存路径，为空时则不保存，可注释掉，默认：空（不保存）
log=${HOME}/.aria2/aria2.log
# 控制台日志级别
console-log-level=notice
# 安静输出，默认：false
quite=false
# 进度摘要输出间隔时间，0为禁止输出，默认：60
summary-interval=0
# 从会话文件中读取下载任务,需要提前创建一个空文件否则报错
input-file=${HOME}/.aria2/aria2.session
# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件
save-session=${HOME}/.aria2/aria2.session
# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0
# 如果对任务状态要求较高，建议只设置为1，表示每秒都保存进度
save-session-interval=30
# 进程意外退出时起作用，默认：60
auto-save-interval=60
# 强制保存会话，即使任务已经完成，默认:false，较新版本开启后会在任务完成后依然保留.aria2文件
force-save=false
# 允许覆盖，当控制文件.aria2不存在时从头开始重新下载，默认：false
allow-overwrite=false
# 断点续传
continue=true
# 始终尝试断点续传，无法续传则会终止，默认：true
always-resume=false
# 不支持断点续传的 URI 数值，当 always-resume=false 时生效
# 达到这个数值从将头开始下载，值为 0 时所有 URI 不支持断点续传时才从头开始下载
max-resume-failure-tries=0
# 获取服务器文件的时间，默认：false
remote-time=true



## 下载连接相关 ##

# 连接超时时间，默认60
connect-timeout=60
# 超时时间, 默认:60
timeout=60
# 设置重试等待的秒数, 默认:0(禁用)
retry-wait=30
# 文件找不到时重试的次数，需要同时设置max-tries，默认：0（禁用）
# max-file-not-found=10
# 最大重试次数, 设置为0表示不限制重试次数, 默认:5
# max-tries=5
# 最大同时下载任务数, 运行时可修改, 默认:5
#max-concurrent-downloads=5
# 同一服务器连接数, 添加时可指定, 默认:1,最大值16，受限于线程数
max-connection-per-server=8
# 单个任务最大线程数, 添加时可指定, 默认:5
#split=5
# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 理论上值越小下载分段越多，下载速度越快，推荐4M，但受限于文件服务器，默认:20M
min-split-size=10M
# HTTP/FTP 下载分片大小，所有分割都必须是此数值的倍数，最小值/默认值：1M
piece-length=1M
# 允许分片大小变化，默认:false，分片大小与控制文件中不同时会终止下载；true：丢失部分下载进度继续下载
allow-piece-length-change=true
# 分片选择算法，有助于视频边下边播同时兼顾减少建立连接的次数
stream-piece-selector=geom
# 整体下载速度限制, 运行时可修改, 默认:0(无限制)
max-overall-download-limit=0
# 单个任务下载速度限制, 默认:0(无限制)
max-download-limit=0
# 整体上传速度限制, 运行时可修改, 默认:0(无限制)
max-overall-upload-limit=0
# 单个任务上传速度限制, 默认:0(无限制)
max-upload-limit=50K
# 禁用IPv6, 默认:false
disable-ipv6=true
# uri复用，默认：true
reuse-uri=false
# GZip支持，默认：false
http-accept-gzip=true
# 禁用netrc支持，默认：true
no-netrc=true
# 优化并发下载
optimize-concurrent-downloads=true
keep-unfinished-download-result=true
# 使用UTF-8处理content-disposition,默认：false
content-disposition-default-utf8=true
# 最低TLS版本，默认：TLSv1.2
#min-tls-version=TLSv1.2
# 允许自动重命名，只在http/ftp下载有效,默认：true
auto-file-renaming=true
# 代理 仅支持 HTTP 协议
#all-proxy=http://127.0.0.1:1087



## BT/PT下载相关 ##

# 检查证书
check-certificate=false
# dht路由文件
dht-file-path=${HOME}/.aria2/dht.dat
dht-file-path6=${HOME}/.aria2/dht6.dat
## BT/PT 下载设置 ##
# 启用 IPv4 DHT 功能, PT 下载(私有种子)会自动禁用, 默认:true
enable-dht=true
dht-entry-point=dht.transmissionbt.com:6881
# 启用 IPv6 DHT 功能, PT 下载(私有种子)会自动禁用，默认:false
# 在没有 IPv6 支持的环境开启可能会导致 DHT 功能异常
enable-dht6=true
dht-entry-point6=dht.Transmissionbt.com:6881
# 指定 BT 和 DHT 网络中的 IP 地址
# 使用场景：在家庭宽带没有公网 IP 的情况下可以把 BT 和 DHT 监听端口转发至具有公网 IP 的服务器，在此填写服务器的 IP ，可以提升 BT 下载速率 
#bt-external-ip=
# 本地节点发现, PT 下载(私有种子)会自动禁用 默认:false
bt-enable-lpd=true
# 指定用于本地节点发现的接口，可能的值：接口，IP地址
# 如果未指定此选项，则选择默认接口 
#bt-lpd-interface=
# 启用节点交换, PT 下载(私有种子)会自动禁用, 默认:true
enable-peer-exchange=true
# BT 下载最大连接数（单任务），运行时可修改 0 为不限制，默认:55
# 理想情况下连接数越多下载越快，但在实际情况是只有少部分连接到的做种者上传速度快，其余的上传慢或者不上传 
# 如果不限制，当下载非常热门的种子或任务数非常多时可能会因连接数过多导致进程崩溃或网络阻塞 
# 进程崩溃：如果设备 CPU 性能一般，连接数过多导致 CPU 占用过高，因资源不足 Aria2 进程会强制被终结 
# 网络阻塞：在内网环境下，即使下载没有占满带宽也会导致其它设备无法正常上网 因远古低性能路由器的转发性能瓶颈导致 
bt-max-peers=128
# BT 下载期望速度值（单任务），运行时可修改 单位 K 或 M  默认:50K
# BT 下载速度低于此选项值时会临时提高连接数来获得更快的下载速度，不过前提是有更多的做种者可供连接 
# 实测临时提高连接数没有上限，但不会像不做限制一样无限增加，会根据算法进行合理的动态调节 
bt-request-peer-speed-limit=10M
# 全局最大上传速度限制, 运行时可修改, 默认:0 (无限制)
# 设置过低可能影响 BT 下载速度
max-overall-upload-limit=2M
# 单任务上传速度限制, 默认:0 (无限制)
max-upload-limit=0
# 分离仅做种任务，默认：false
bt-detach-seed-only=true
# 最小分享率 当种子的分享率达到此选项设置的值时停止做种, 0 为一直做种, 默认:1.0
# 强烈建议您将此选项设置为大于等于 1.0
seed-ratio=1.0
# 最小做种时间（分钟） 设置为 0 时将在 BT 任务下载完成后停止做种 
seed-time=0
# tracker服务器连接超时时间，连接后无效，默认：60
bt-tracker-connect-timeout=30
# tracker服务器超时时间，默认：60
bt-tracker-timeout=20
# tracker服务器连接间隔时间，默认：0（自动）
bt-tracker-interval=0
# 做种前检查文件哈希, 默认:true
bt-hash-check-seed=true
# 继续之前的BT任务时, 无需再次校验, 默认:false
bt-seed-unverified=true
# BT 下载优先下载文件开头或结尾
bt-prioritize-piece=head=32M,tail=32M
# 保存通过 WebUI(RPC) 上传的种子文件(.torrent)，默认:true
# 所有涉及种子文件保存的选项都建议开启，不保存种子文件有任务丢失的风险 
# 通过 RPC 自定义临时下载目录可能不会保存种子文件 
rpc-save-upload-metadata=true
# 下载种子文件(.torrent)自动开始下载, 默认:true，可选：false|mem
# true：保存种子文件
# false：仅下载种子文件
# mem：将种子保存在内存中
follow-torrent=true
# 种子文件下载完后暂停任务，默认：false
# 在开启 follow-torrent 选项后下载种子文件或磁力会自动开始下载任务进行下载，而同时开启当此选项后会建立相关任务并暂停 
pause-metadata=false
# 保存磁力链接元数据为种子文件(.torrent), 默认:false
bt-save-metadata=true
# 加载已保存的元数据文件(.torrent)，默认:false
bt-load-saved-metadata=true
# 删除BT任务中未选中的文件，默认：false
bt-remove-unselected-file=true
# BT强制加密，默认：false
# 启用后将拒绝旧的BT握手协议，并使用混淆握手以及加密，可以解决部分运营商对BT下载的封锁，且有一定的防版权投诉与迅雷吸血效果
# 此选项相当于后面两个选项bt-require-crypto=true,bt-min-crypto-level=arc4的快捷开启方式，但不会修改这两个选项的值
bt-force-encryption=true
# BT加密需求，默认：false
#bt-require-crypto=true
# BT最低加密等级，可选明文（plain),arc4（密文），默认：plain
#bt-min-crypto-level=arc4

# BT 服务器地址
# 逗号分隔的 BT 服务器地址. 如果服务器地址在 --bt-exclude-tracker 选项中, 其将不会生效.
bt-tracker=
# BT 排除服务器地址
#bt-exclude-tracker=


## 客户端伪装, PT需要 ##

# 自定义User agent
#user-agent=xxxx
# BT客户端伪装，PT下载需要保持user-agent和peer-agent两个参数一致
# 部分PT站对Aria2有特殊封禁机制，客户端伪装不一定有效，且有封禁账号的风险
user-agent=Transmission/2.77
peer-agent=Transmission/2.77
peer-id-prefix=-TR2770-



## RPC设置 ##

# 启用RPC, 默认:false
enable-rpc=true
# 允许所有来源, 默认:false
rpc-allow-origin-all=true
# 允许非外部访问, 默认:false
rpc-listen-all=true
# RPC最大请求大小
rpc-max-request-size=10M
# RPC监听端口, 端口被占用时可以修改, 默认:6800
#rpc-listen-port=6800
# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同
#event-poll=select
# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项
# rpc-secret=Syunraii
# 是否启用 RPC 服务的 SSL/TLS 加密,启用加密后 RPC 服务需要使用 https 或者 wss 协议连接
#rpc-secure=true
# 在 RPC 服务中启用 SSL/TLS 加密时的证书文件,使用 PEM 格式时，您必须通过 --rpc-private-key 指定私钥
#rpc-certificate=/path/to/certificate.pem
# 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件
#rpc-private-key=/path/to/certificate.key

# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-user=<USER>
# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-passwd=<PASSWD>



## 高级选项 ##

# 启用异步DNS功能，默认：true
#async-dns=true
# 指定异步DNS服务器列表
#async-dns-server=119.29.29.29,223.5.5.5,8.8.8.8,1.1.1.1
# 指定单个网络接口
#interface=
# 指定多个网络接口
#multiple-interface=



## 执行额外命令 ##

# 下载开始后执行
# on-download-start=${HOME}/.aria2/download-start-hook.sh
# 下载暂停后执行
#on-download-pause=
# 下载停止后执行
#on-download-stop=
# 下载错误后执行
#on-download-error=
# 下载完成后执行
on-download-complete=${HOME}/.aria2/download-complete-hook.sh
# BT下载完成(如有做种将包含做种，如需调用请务必确定设定完成做种条件)
on-bt-download-complete=${HOME}/.aria2/download-complete-hook.sh
